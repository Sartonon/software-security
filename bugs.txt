#
# [file:#lines]
# desc
#

[zookd.c:65]
Tässä reqpath muuttujan puskuri voi vuotaa yli jos HTTP requestin pathi on liian pitkä

    char reqpath[2048];
    const char *errmsg;
    int i;

    /* get the request line */
    if ((errmsg = http_request_line(fd, reqpath, env, &env_len)))
        return http_err(fd, 500, "http_request_line: %s", errmsg);
   
    http.c http_request_line

    url_decode(value, sp);

[http.c:121]
Puskuriylivuoto voi tulla envvarriin pitkällä request header avaimella, sprintf
ei tarkista meneekö puskuri yli

    static char buf[8192];      /* static variables are not on the stack */
    int i;
    char value[512];
    char envvar[512];

    sprintf(envvar, "HTTP_%s", buf);

    /* For lab 2: don't remove this line. */
    touch("http_request_headers");


[http.c:120]
    Request headerin avaimen arvo voi vuotaa yli tässä tapauksessa

    char value[512];
    char envvar[512];

    url_decode(value, sp);

[http.c:282]
Tässä strcatilla laitetaan name pn muuttujaan. Namessa on http-kutsu osoitepolk
joten pitällä sellaisella saa tässä puskuriylivuodon

    getcwd(pn, sizeof(pn));
    setenv("DOCUMENT_ROOT", pn, 1);

    strcat(pn, name);
    split_path(pn);

[http.c:353]
Tässä voidaan char name[] ylivuotaaa esim pitkällä requestilla, jossa on monta
kautta-merkkiä

for (i = 0; indices[i]; i++) {
        dir_join(name, pn, indices[i]);
        if (stat(name, &st) == 0 && S_ISREG(st.st_mode)) {
            dir_join(name, getenv("SCRIPT_NAME"), indices[i]);
            break;
        }
    }

# many more come here
